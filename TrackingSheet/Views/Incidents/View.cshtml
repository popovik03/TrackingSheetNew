@model TrackingSheet.Models.UpdateIncidentViewModel

@{
    ViewData["Title"] = "Редактирование инцидента";
    var reporter = TempData.Peek("Login") as string ?? string.Empty;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    
    <script src="~/js/new_incident.js" defer></script>
</head>

<body>
    <form method="post" action="@Url.Action("View", "Incidents")" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <div>
                <h1><label>Редактирование инцидента</label></h1>
                <h2><label>Внесите изменения или удалите инцидент</label></h2>
            </div>
            <div style="display: flex; gap: 10px;">
                <!-- Контейнер для кнопок -->
                <div style="display: flex; justify-content: flex-end; align-items: center; margin-top: 0px; margin-right: 45px">
                    <!-- Кнопка для загрузки файла -->
                    <a href="#" onclick="document.getElementById('fileInput').click();" style="display: flex; align-items: center; justify-content: center; width: 52px; height: 52px;">
                        <img src="~/icons/skrepa.png" alt="Добавить вложение" style="width: 48px; height: 48px; transform: scale(1.1);">
                    </a>

                    <!-- Скрытое поле для выбора файла -->
                    <input type="file" id="fileInput" name="uploadedFile" style="display: none;" onchange="handleFileSelect(event)">

                    <!-- Кнопка открытия модального окна для добавления IncidentUpdate -->
                    <a href="#" id="openModalButton" style="display: flex; align-items: center; justify-content: center; width: 52px; height: 52px;">
                        <img src="~/icons/add.png" alt="Добавить" style="width: 48px; height: 48px; transform: scale(1.1);">
                    </a>

                    <!-- Кнопка удаления инцидента -->
                    <a href="@Url.Action("Delete", "Incidents", new { id = Model.ID })"
                       style="display: flex; align-items: center; justify-content: center; width: 52px; height: 52px; transform: scale(1.1);"
                       onclick="return confirm('Вы уверены, что хотите удалить запись?')">
                        <img src="~/icons/delete.png" alt="Удалить" style="width: 48px; height: 48px;">
                    </a>
                </div>
            </div>
        </div>

        <div class="container-new-incident">
            <!-- Поля ввода данных инцидента -->
            <!-- Левый блок -->
            <div class="left">
                <div class="input-field" style="display: flex; gap: 10px; ">
                    <div style="flex: 1;">
                        <label for="Date" class="form-label">Дата начала</label>
                        <input type="datetime-local" class="form-control form-control-sm" asp-for="Date" />
                    </div>
                    <div style="flex: 1; max-width: 40%;">
                        <label for="DateEnd" class="form-label">Дата окончания</label>
                        <input type="datetime-local" class="form-control form-control-sm" asp-for="DateEnd" />
                    </div>
                </div>
                <div class="input-field">
                    <label for="Shift" class="form-label">Смена</label>
                    <div class="col-sm-12">
                        <select class="form-select" asp-for="Shift">
                            <option value="Day">День</option>
                            <option value="Night">Ночь</option>
                        </select>
                    </div>
                </div>
                <div class="input-field">
                    <label for="Reporter" class="form-label">431</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Reporter" />
                </div>
                <div class="input-field">
                    <label for="VSAT" class="form-label" min="0">VSAT</label>
                    <input type="number" class="form-control form-control-sm" asp-for="VSAT" />
                </div>
                <div class="input-field">
                    <label for="Well" class="form-label">Скважина</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Well" />
                </div>
                <div class="input-field">
                    <label for="Run" class="form-label">Рейс</label>
                    <input type="number" class="form-control form-control-sm" min="0" asp-for="Run" />
                </div>
                <div class="input-field">
                    <label for="SavedNPT" class="form-label">Сохраненное НПВ, ч</label>
                    <input type="number" class="form-control form-control-sm" asp-for="SavedNPT" />
                </div>
                <div class="input-field">
                    <label for="ProblemType" class="form-label">Тип проблемы</label>
                    <div class="col-sm-12">
                        <select class="form-select form-select-sm" asp-for="ProblemType">
                            <!-- Список типов проблем -->
                            <option value="Advantage">Advantage</option>
                            <option value="ATK issue">ATK issue</option>
                            <option value="APS">APS</option>
                            <option value="BCPM II">BCPM II</option>
                            <option value="Cadence">Cadence</option>
                            <option value="Computer">Computer</option>
                            <option value="Curve Failure">Curve Failure</option>
                            <option value="Decoding">Decoding</option>
                            <option value="Desync">Desync</option>
                            <option value="Downlink">Downlink</option>
                            <option value="LTK">LTK</option>
                            <option value="M30">M30</option>
                            <option value="Memfix">Memfix</option>
                            <option value="Organization">Organisation</option>
                            <option value="OTK">OTK</option>
                            <option value="Pressure">Pressure</option>
                            <option value="Procedures">Procedures</option>
                            <option value="Programming | Tip">Programming | Tip</option>
                            <option value="Pulser issue">Pulser issue</option>
                            <option value="Service delivery">Service delivery</option>
                            <option value="Surface issue">Surface issue</option>
                            <option value="Survey issue">Survey issue</option>
                            <option value="UsMPR">UsMPR</option>
                            <option value="WellArchitect">WellArchitect</option>
                            <option value="Win10">Win10</option>
                            <option value="WITS">WITS</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="input-field">
                    <label for="HighLight" class="form-label">Отметка</label>
                    <div class="col-sm-12">
                        <select class="form-select form-select-sm" asp-for="HighLight">
                            <option value=""></option>
                            <option value="🚩">🚩</option>
                        </select>
                    </div>
                </div>
                <div class="input-field">
                    <label for="Status" class="form-label">Статус</label>
                    <div class="col-sm-12">
                        <select class="form-select form-select-sm" asp-for="Status">
                            <option value="Success" style="background-color: lawngreen">Success</option>
                            <option value="Process" style="background-color: yellow">Process</option>
                            <option value="Fail" style="background-color: orangered">Fail</option>
                            <option value="None" style="background-color: darkgrey">None</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Правый блок -->
            <div class="right" style="display: flex; flex-direction: column; height: 100%;">
                <div class="description" style="flex: 70%; overflow: auto;">
                    <div class="input-field">
                        <label for="Solution" class="form-label">Описание инцидента:</label>
                        <textarea class="form-control" style="width: 99%; margin-left:3px; height:80%" id="exampleFormControlTextarea1" rows="16" asp-for="Solution"></textarea>
                    </div>
                </div>
                <div class="attachments" style="flex: 30%; overflow: auto; border-top: 1px solid #ccc; padding-top: 10px;">
                    <!-- Элемент для предварительного просмотра загруженных файлов -->
                    <div id="filePreview"></div>

                    <!-- Отображение загруженных файлов -->
                    @{
                        var incidentFolder = System.IO.Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "uploads", Model.ID.ToString());
                        var filesExist = System.IO.Directory.Exists(incidentFolder) && System.IO.Directory.GetFiles(incidentFolder).Length > 0;
                    }

                    @if (filesExist)
                    {
                        <h4>Вложенные файлы:</h4>
                        <div style="font-size: 12px">
                            @{
                                var files = System.IO.Directory.GetFiles(incidentFolder);

                                foreach (var file in files)
                                {
                                    var fileName = System.IO.Path.GetFileName(file);
                                    var fileUrl = Url.Content($"~/uploads/{Model.ID}/{fileName}");

                                    <div style="display: flex; align-items: center;">
                                        <a href="@fileUrl" target="_blank">@fileName</a>
                                        <button type="button" onclick="deleteFile('@fileName', '@Model.ID')" style="margin-left: 10px; cursor: pointer; background-color: transparent; border: none;">
                                            <img src="~/icons/delete.png" alt="Удалить" style="width: 16px; height: 16px;">
                                        </button>
                                    </div>
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <p>Файлы не найдены.</p>
                    }


                </div>
            </div>

            
        </div>


        <script>

            function deleteFile(fileName, incidentId) {
                if (confirm('Вы уверены, что хотите удалить этот файл?')) {
                    fetch(`/Incidents/DeleteFile?fileName=${encodeURIComponent(fileName)}&incidentId=${incidentId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })

                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Файл успешно удален.');
                                location.reload(); // Полная перезагрузка страницы после удаления файла
                            } else {
                                alert('Ошибка при удалении файла: ' + (data.message || 'Неизвестная ошибка.'));
                            }
                        })
                        .catch(error => {
                            console.error('Ошибка:', error);
                            alert('Ошибка при удалении файла.');
                        });
                }
            }

            function handleFileSelect(event) {
                console.log('handleFileSelect called');
                console.log('Selected file:', event.target.files[0]);

                // Используем setTimeout для отсрочки нажатия кнопки "Сохранить"
                setTimeout(function () {
                    var submitButton = document.querySelector('button[type="submit"]');
                    if (submitButton) {
                        console.log('Submitting form...');
                        submitButton.click();
                    } else {
                        console.error('Submit button not found');
                    }
                }, 100); // Задержка в 100 мс для уверенности, что файл выбран
            }

            document.addEventListener('DOMContentLoaded', function () {
                var modal = document.getElementById("incidentUpdateModal");
                var btn = document.getElementById("openModalButton");
                var span = document.getElementsByClassName("close-modal")[0];

                var updateForm = document.getElementById("incidentUpdateForm");
                var updateDate = document.getElementById("updateDate");
                var updateReporter = document.getElementById("updateReporter");
                var updateRun = document.getElementById("updateRun");
                var updateSolution = document.getElementById("updateSolution");

                btn.onclick = function (event) {
                    event.preventDefault();
                    updateDate.value = new Date().toISOString().slice(0, 16);
                    updateReporter.value = "@reporter";
                    updateRun.value = "@Model.Run";
                    updateSolution.value = "";
                    modal.style.display = "block";
                }

                span.onclick = function () {
                    modal.style.display = "none";
                }

                window.onclick = function (event) {
                    if (event.target == modal) {
                        modal.style.display = "none";
                    }
                }

                updateForm.addEventListener('submit', function (event) {
                    event.preventDefault();

                    var formData = {
                        ID: "@Model.ID",
                        Date: updateDate.value,
                        UpdateReporter: updateReporter.value,
                        Run: updateRun.value,
                        UpdateSolution: updateSolution.value
                    };

                    fetch('@Url.Action("AddUpdate", "Incidents")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': getAntiForgeryToken()
                        },
                        body: JSON.stringify(formData)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Инцидент успешно обновлен.');
                                modal.style.display = "none";
                                location.reload();
                            } else {
                                alert('Ошибка при обновлении инцидента: ' + data.message);
                            }
                        })
                        .catch(error => {
                            console.error('Ошибка:', error);
                            alert('Произошла ошибка при обновлении инцидента.');
                        });
                });

                function getAntiForgeryToken() {
                    var tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                    return tokenElement ? tokenElement.value : '';
                }
            });

        </script>

        <div class="button-container">
            <button type="submit" class="btn btn-primary btn-lg" style="margin-right: 15px">
                Сохранить
                <svg class="icon_plus" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6 15L8 17L12.5 12.5M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"></path>
                </svg>
            </button>
        </div>

        <!-- Модальное окно для добавления IncidentUpdate -->
        <div id="incidentUpdateModal" class="modal">
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <div class="modal-header">
                    <h2>Добавить обновление инцидента</h2>
                </div>
                <div class="modal-body">
                    <form id="incidentUpdateForm">
                        <label for="updateDate">Дата и время</label>
                        <input type="datetime-local" id="updateDate" name="Date" readonly />

                        <label for="updateReporter">Reporter</label>
                        <input type="text" id="updateReporter" name="UpdateReporter" readonly />

                        <label for="updateRun">Рейс</label>
                        <input type="number" id="updateRun" name="Run" readonly />

                        <label for="updateSolution">Описание</label>
                        <textarea id="updateSolution" name="UpdateSolution" rows="4" required></textarea>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="cancelUpdateButton">Отмена</button>
                    <button type="button" id="saveUpdateButton">Сохранить</button>
                </div>
            </div>
        </div>
    </form>
</body>

</html>
