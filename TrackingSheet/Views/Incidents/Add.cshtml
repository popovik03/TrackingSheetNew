@using static TrackingSheet.Models.AddIncidentViewModel
@model TrackingSheet.Models.AddIncidentViewModel

@{

    ViewData["Title"] = "Новая запись";
    var reporter = TempData.Peek("Login") as string ?? string.Empty;
    var well = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.WELL_NAME : string.Empty;
    var run = ViewBag.VsatInfo != null ? (int?)ViewBag.VsatInfo.MWRU_NUMBER : (int?)null;
    var customer = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.CPNM_NAME : string.Empty;

    var pad = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.FCTY_NAME : string.Empty;
    var field = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.OOIN_NAME : string.Empty;
    var wellDisplay = $"{field} - {pad} - {well}".Trim(' ', '-');

    // Извлечение данных из ViewBag.VsatInfo
    var vsatInfo = ViewBag.VsatInfo as TrackingSheet.Models.VSATdata.VsatInfo;
    string bha = string.Empty;

    if (vsatInfo != null)
    {
        var positions = vsatInfo.MWRC_POSITION; // Словарь с позициями компонентов
        var sns = vsatInfo.MWCO_SN; // Словарь с серийными номерами
        var components = vsatInfo.NEW_REAL_NAME; // Словарь с именами компонентов

        // Создание строки bha, сортируя по позициям и объединяя нужные данные
        bha = string.Join("", positions.OrderBy(kv => kv.Value).Select(position =>
        {
            var key = position.Key;
            var pos = position.Value;
            var component = components.ContainsKey(key) ? components[key] : "N/A";
            var sn = sns.ContainsKey(key) ? sns[key] : "N/A";
            return $"{pos}: {component} {sn}; ";
        }));
    }
    else
    {
        bha = "";
    }

    // Определение текущей смены на сервере
    var currentTime = DateTime.Now.TimeOfDay;
    var shift = (currentTime >= new TimeSpan(20, 0, 0) || currentTime < new TimeSpan(8, 0, 0)) ? "Night" : "Day";


}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <script src="~/js/new_incident.js" defer></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .right {
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        .description {
            flex: 8; /* 80% */
            overflow: auto;
        }

        .attachments {
            flex: 2; /* 20% */
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            align-items: flex-start;
        }

        .file-item {
            position: relative;
            width: 100px;
            height: 100px;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 5px;
            box-sizing: border-box;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f9f9f9;
        }

            .file-item .fa-file-alt {
                font-size: 2em;
                color: #555;
            }

            .file-item .delete-icon {
                position: absolute;
                top: 2px;
                right: 2px;
                color: red;
                background-color: rgba(255, 255, 255, 0.7);
                border-radius: 50%;
                padding: 2px;
                cursor: pointer;
                font-size: 0.8em;
            }

                .file-item .delete-icon:hover {
                    background-color: rgba(255, 0, 0, 0.8);
                    color: white;
                }
    </style>
</head>

<body>
    <!-- Объединенная форма для добавления инцидента и получения данных VSAT -->
    <form method="post" action="/Incidents/Add" id="mainForm" enctype="multipart/form-data">

        <!-- Добавляем скрытое поле для передачи ID -->
        <input type="hidden" asp-for="ID" />
        
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <div>
                <h1><label>Новый инцидент</label></h1>
                <h2><label>Добавьте новый инцидент</label></h2>
            </div>
            <div style="display: flex; gap: 10px;">
               
                <!-- Контейнер для кнопок -->
                <div style="display: flex; justify-content: flex-end; align-items: center; margin-top: 0px; margin-right: 45px">
                    <!-- Кнопка для загрузки файла -->
                    <a href="#" onclick="document.getElementById('fileInput').click();" style="display: flex; align-items: center; justify-content: center; width: 52px; height: 52px;">
                        <img src="~/icons/skrepa.png" alt="Добавить вложение" style="width: 48px; height: 48px; transform: scale(1.1);">
                    </a>

                    <!-- Скрытое поле для выбора файла -->
                    <input type="file" id="fileInput" name="UploadedFiles" multiple style="display: none;">

                </div>
            </div>
        </div>

        <div class="container-new-incident">
            <div class="left">

                <!-- Поле для IP-адреса -->
                <div class="input-field" style="display: flex; flex-direction: column; align-items: flex-start; width: 100%;">
                    <label for="vsatInput" class="form-label" style="margin-bottom: 5px;">VSAT</label>
                    <div style="display: flex; align-items: center; width: 100%;">
                        <input type="number" id="vsatInput" name="ipPart" class="form-control form-control-sm" min="0" asp-for="VSAT"
                               style="flex: 1; width: 70%; margin-right: 10px;" />
                        <button type="button" id="getDataButton" class="btn-icon" style="background: none; border: none; padding: 0; cursor: pointer; font-size: 1.5em; color: #03BE93;">
                            <i class="fas fa-database"></i> <!-- Иконка для кнопки -->
                        </button>
                    </div>
                </div>

                <div class="input-field">
                    <label for="" class="form-label">Дата инцидента</label>
                    <input type="datetime-local" class="form-control form-control-sm" asp-for="Date" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                </div>

                <div class="input-field">
                    <label for="" class="form-label">Смена</label>
                    <select class="form-select" asp-for="Shift">
                        <option value="Day" selected="@(shift == "Day" ? "selected" : "")">День</option>
                        <option value="Night" selected="@(shift == "Night" ? "selected" : "")">Ночь</option>
                    </select>
                </div>

                <div class="input-field">
                    <label for="reporter" class="form-label">431</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Reporter" value="@reporter" />
                </div>

                <div class="input-field">
                    <label for="" class="form-label">Скважина</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Well" value="@wellDisplay" />
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Рейс</label>
                    <input type="number" class="form-control form-control-sm" asp-for="Run" min="0" value="@run" />
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Сохраненное НПВ, ч.</label>
                    <input type="number" class="form-control form-control-sm" asp-for="SavedNPT" min="0" />
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Тип проблемы</label>
                    <div class="col-sm-12">
                        <select class="form-select form-select-sm" asp-for="ProblemType">
                            <!-- Опции -->
                            <option value="Advantage">Advantage</option>
                            <option value="ATK issue">ATK issue</option>
                            <option value="APS">APS</option>
                            <option value="BCPM II">BCPM II</option>
                            <option value="Cadence">Cadence</option>
                            <option value="Computer">Computer</option>
                            <option value="Curve Failure">Curve Failure</option>
                            <option value="Decoding">Decoding</option>
                            <option value="Desync">Desync</option>
                            <option value="Downlink">Downlink</option>
                            <option value="LTK">LTK</option>
                            <option value="M30">M30</option>
                            <option value="Memfix">Memfix</option>
                            <option value="Organization">Organisation</option>
                            <option value="OTK">OTK</option>
                            <option value="Pressure">Pressure</option>
                            <option value="Procedures">Procedures</option>
                            <option value="Programming | Tip">Programming | Tip</option>
                            <option value="Pulser issue">Pulser issue</option>
                            <option value="Service delivery">Service delivery</option>
                            <option value="Surface issue">Surface issue</option>
                            <option value="Survey issue">Survey issue</option>
                            <option value="UsMPR">UsMPR</option>
                            <option value="WellArchitect">WellArchitect</option>
                            <option value="Win10">Win10</option>
                            <option value="WITS">WITS</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Отметка</label>
                    <div class="col-sm-12">
                        <select class="form-select form-select-sm" asp-for="HighLight">
                            <option value=""></option>
                            <option value="🚩">🚩</option>
                        </select>
                    </div>
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Статус</label>
                    <div class="col-sm-12">
                        <select class="form-select form-select-sm" asp-for="Status">
                            <option value="Success" style="background-color: lawngreen">Success</option>
                            <option value="Process" style="background-color: yellow">Process</option>
                            <option value="Fail" style="background-color: orangered">Fail</option>
                            <option value="None" style="background-color: darkgrey">None</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="right" style="display: flex; flex-direction: column; height: 100%;">
                <!-- Секция описания инцидента (80%) -->
                <div class="description" style="flex: 8; overflow: auto;">
                    <div class="input-field">
                        <label for="" class="form-label">Описание инцидента:</label>
                        <textarea class="form-control" style="width: 99%; margin-left:3px; height:80%" id="descriptionTextarea" rows="12" asp-for="Solution">
                            @Html.Raw(bha)
            </textarea>
                    </div>
                </div>

                <!-- Секция вложений (20%) -->
                <div class="attachments" id="filePreview" style="flex: 2; margin-top: 20px; display: flex; flex-wrap: wrap; gap: 10px;">
                    <!-- Примеры отображения файлов будут добавляться сюда через JavaScript -->
                </div>
            </div>

        </div>

        <div class="button-container">
            <button type="submit" class="btn btn-primary btn-lg">
                <svg class="icon_plus" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6 15L8 17L12.5 12.5M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"></path>
                </svg>
                Добавить
            </button>
        </div>
    </form>

    <form method="post" action="/Incidents/SetIpAddressAndGetLatestVsatInfo" id="vsatForm" style="display: none">
        <div class="input-field">
            <label for="vsatInput" class="form-label">IP-адрес</label>
            <input type="number" id="vsatInputHidden" name="ipPart" class="form-control form-control-sm" min="0" />
        </div>
    </form>

    <script>
    // Объявляем массив selectedFiles в глобальной области видимости
    var selectedFiles = [];

    document.addEventListener('DOMContentLoaded', function () {
        var getDataButton = document.querySelector('#getDataButton');
        var vsatInput = document.querySelector('#vsatInput');
        var vsatForm = document.querySelector('#vsatForm');
        var vsatInputHidden = document.querySelector('#vsatInputHidden');
        var descriptionTextarea = document.querySelector('#descriptionTextarea');

        // Загрузка сохраненного значения из localStorage при загрузке страницы
        var savedVsatValue = localStorage.getItem('vsatValue');
        if (savedVsatValue) {
            vsatInput.value = savedVsatValue;
        }

        if (getDataButton && vsatInput && vsatForm && vsatInputHidden) {
            // Сохранение значения в localStorage и отправка формы при нажатии кнопки
            getDataButton.addEventListener('click', function () {
                var ipPart = vsatInput.value;
                if (ipPart) {
                    localStorage.setItem('vsatValue', ipPart); // Сохраняем значение в localStorage
                    vsatInputHidden.value = ipPart; // Обновляем скрытое поле
                    vsatForm.submit(); // Отправляем форму для получения данных
                } else {
                    console.error('IP-адрес не введен');
                    alert('Пожалуйста, введите IP-адрес.');
                }
            });
        } else {
            console.error('Не удалось найти элементы кнопки или формы.');
        }

        // Установка значения в поле textarea
        var bha = "@Html.Raw(bha)"; // Преобразуем значение в строку
        if (descriptionTextarea) {
            descriptionTextarea.value = bha;
        }
    });

    // Функция для добавления файлов
    function handleFileSelection(event) {
        const files = event.target.files;
        const filePreviewDiv = document.getElementById('filePreview');

        if (!filePreviewDiv) {
            console.error('Элемент с id "filePreview" не найден.');
            return; // Прекращаем выполнение функции, если элемент не найден
        }

        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            // Проверка, что файл еще не добавлен
            if (!selectedFiles.some(f => f.name === file.name && f.size === file.size && f.lastModified === file.lastModified)) {
                selectedFiles.push(file); // Добавляем каждый выбранный файл в массив
            }
        }

        updateFilePreview(); // Обновляем отображение файлов
    }

    // Функция для обновления предпросмотра файлов
    function updateFilePreview() {
        const filePreviewDiv = document.getElementById('filePreview');

        if (!filePreviewDiv) {
            console.error('Элемент с id "filePreview" не найден.');
            return;
        }

        // Очистка предыдущего предпросмотра файлов
        filePreviewDiv.innerHTML = '';

        selectedFiles.forEach((file, index) => {
            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';

            // Иконка файла
            const fileIcon = document.createElement('i');
            fileIcon.className = 'fas fa-file-alt';

            // Название файла
            const fileName = document.createElement('div');
            fileName.className = 'file-name';
            fileName.textContent = file.name;

            // Красный крестик для удаления файла
            const deleteIcon = document.createElement('i');
            deleteIcon.className = 'fas fa-times delete-icon';
            deleteIcon.title = 'Удалить файл';
            deleteIcon.dataset.index = index; // Используем data-атрибут для индекса

            deleteIcon.addEventListener('click', function () {
                const idx = parseInt(this.dataset.index, 10);
                selectedFiles.splice(idx, 1);  // Удаляем файл из массива
                updateFilePreview(); // Обновляем отображение
            });

            fileItem.appendChild(fileIcon);
            fileItem.appendChild(fileName);
            fileItem.appendChild(deleteIcon);
            filePreviewDiv.appendChild(fileItem);
        });
    }

    // Добавляем обработчик события для выбора файлов
    document.getElementById('fileInput').addEventListener('change', handleFileSelection);

    // Добавляем обработчик события для отправки формы
    document.getElementById('mainForm').addEventListener('submit', function (event) {
        event.preventDefault();  // Предотвращаем обычную отправку формы

        const form = this;
        const formData = new FormData();

        // Добавляем выбранные файлы
        selectedFiles.forEach(file => formData.append('UploadedFiles', file));

        // Добавляем другие поля формы
        const formElements = form.elements;
        for (let i = 0; i < formElements.length; i++) {
            const element = formElements[i];
            if (element.name && element.type !== 'file') {
                formData.append(element.name, element.value);
            }
        }

        // Получаем токен антивируса (CSRF токен)
        const token = document.querySelector('input[name="__RequestVerificationToken"]');
        if (token) {
            formData.append('__RequestVerificationToken', token.value);
        }

        // Отправка формы с использованием fetch
        fetch(form.action, {
            method: form.method,
            body: formData,
        })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/Incidents/Index';  // Перенаправление после успешной отправки
                } else {
                    return response.text().then(text => { throw new Error(text) });
                }
            })
            .catch(error => {
                console.error('Ошибка при отправке формы:', error);
                alert('Произошла ошибка при сохранении инцидента.');
            });
    });

    function deleteFile(fileName, incidentId) {
        // Код для удаления файла через AJAX
        fetch('/Incidents/DeleteFile', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({ fileName: fileName, incidentId: incidentId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Удаляем элемент из DOM
                    const fileElement = document.querySelector(`button[data-filename="${fileName}"][data-incidentid="${incidentId}"]`).parentElement;
                    fileElement.remove();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Ошибка при удалении файла:', error);
                alert('Произошла ошибка при удалении файла.');
            });
    }
</script>



</body>
</html>
