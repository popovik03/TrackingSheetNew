@using static TrackingSheet.Models.AddIncidentViewModel
@model TrackingSheet.Models.AddIncidentViewModel
@using System.Security.Claims
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment env

@{

    ViewData["Title"] = "Новая запись";
    // Получение имени пользователя через User.Identity
    var loggedUser = User.Identity.IsAuthenticated ? User.Identity.Name : "Гость";
    var boardId = ViewBag.BoardId;

    var well = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.WELL_NAME : string.Empty;
    var run = ViewBag.VsatInfo != null ? (int?)ViewBag.VsatInfo.MWRU_NUMBER : (int?)null;
    var customer = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.CPNM_NAME : string.Empty;

    var pad = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.FCTY_NAME : string.Empty;
    var field = ViewBag.VsatInfo != null ? ViewBag.VsatInfo.OOIN_NAME : string.Empty;
    var wellDisplay = $"{field} - {pad} - {well}".Trim(' ', '-');

    // Извлечение данных из ViewBag.VsatInfo
    var vsatInfo = ViewBag.VsatInfo as TrackingSheet.Models.VSATdata.VsatInfo;
    string bha = string.Empty;

    if (vsatInfo != null)
    {
        var positions = vsatInfo.MWRC_POSITION; // Словарь с позициями компонентов
        var sns = vsatInfo.MWCO_SN; // Словарь с серийными номерами
        var components = vsatInfo.NEW_REAL_NAME; // Словарь с именами компонентов

        // Создание строки bha, сортируя по позициям и объединяя нужные данные
        bha = string.Join("", positions.OrderBy(kv => kv.Value).Select(position =>
        {
            var key = position.Key;
            var pos = position.Value;
            var component = components.ContainsKey(key) ? components[key] : "N/A";
            var sn = sns.ContainsKey(key) ? sns[key] : "N/A";
            return $"{pos}: {component} {sn}; ";
        }));
    }
    else
    {
        bha = "";
    }

    // Определение текущей смены на сервере
     var currentTime = DateTime.Now.TimeOfDay;
     var shift = (currentTime >= new TimeSpan(20, 0, 0) || currentTime < new TimeSpan(8, 0, 0)) ? "Night" : "Day";


}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
</head>

<body>
    <form method="post" action="/Incidents/Add" id="mainForm" enctype="multipart/form-data">

        <!-- Добавляем скрытое поле для передачи ID -->
        <input type="hidden" asp-for="ID" />
        
        <div>
            <div>
                <h1><label>Новый инцидент</label></h1>
                <h2><label>Добавьте новый инцидент</label></h2>
            </div>
            <input type="file" id="fileInput" name="UploadedFiles" multiple style="display: none;">
        </div>

        <div class="container-new-incident">
            <div class="left">

                <!-- Поле для IP-адреса -->
                <div class="input-field">
                    <label for="vsatInput" class="form-label">VSAT</label>
                    <div class=vsat_field>
                        <input type="number" id="vsatInput" name="ipPart" class="form-control form-control-sm" min="0" asp-for="VSAT"/>
                        <button type="button" id="getDataButton" class="get_data_button">
                            <svg class="icon_get_data" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path d="M2 10C2 10 2.12132 9.15076 5.63604 5.63604C9.15076 2.12132 14.8492 2.12132 18.364 5.63604C19.6092 6.88131 20.4133 8.40072 20.7762 10M2 10V4M2 10H8M22 14C22 14 21.8787 14.8492 18.364 18.364C14.8492 21.8787 9.15076 21.8787 5.63604 18.364C4.39076 17.1187 3.58669 15.5993 3.22383 14M22 14V20M22 14H16"/>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="input-field">
                    <label class="form-label">Дата инцидента</label>
                    <input type="datetime-local" class="form-control form-control-sm" asp-for="Date" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                </div>

                <div class="input-field">
                    <label class="form-label">Смена</label>
                    <div class="select-wrapper">
                        <select class="custom-select" asp-for="Shift">
                        <option value="Day" selected="@((shift == "Day") ? "selected" : null)">День</option>
                        <option value="Night" selected="@((shift == "Night") ? "selected" : null)">Ночь</option>
                        </select>
                        <div class="select-arrow">
                            <svg class="icon_dropdown_arrow" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path d="M6 9L12 15L18 9"/>
                            </svg>
                        </div>
                    </div>
                </div>
                

                <div class="input-field">
                    <label for="reporter" class="form-label">431</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Reporter" value="@loggedUser" />
                </div>

                <div class="input-field">
                    <label for="" class="form-label">Скважина</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Well" value="@wellDisplay" />
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Рейс</label>
                    <input type="number" class="form-control form-control-sm" asp-for="Run" min="0" value="@run" />
                </div>
                <div class="input-field">
                    <label for="" class="form-label">Сохраненное НПВ, ч.</label>
                    <input type="number" class="form-control form-control-sm" asp-for="SavedNPT" min="0" />
                </div>
                <div class="input-field">
                    <label class="form-label">Тип проблемы</label>
                    <div class="select-wrapper">
                        <select asp-for="ProblemType">
                            <option value="Advantage">Advantage</option>
                            <option value="ATK issue">ATK issue</option>
                            <option value="APS">APS</option>
                            <option value="BCPM II">BCPM II</option>
                            <option value="Cadence">Cadence</option>
                            <option value="Computer">Computer</option>
                            <option value="Curve Failure">Curve Failure</option>
                            <option value="Decoding">Decoding</option>
                            <option value="Desync">Desync</option>
                            <option value="Downlink">Downlink</option>
                            <option value="LTK">LTK</option>
                            <option value="M30">M30</option>
                            <option value="Memfix">Memfix</option>
                            <option value="Organization">Organisation</option>
                            <option value="OTK">OTK</option>
                            <option value="Pressure">Pressure</option>
                            <option value="Procedures">Procedures</option>
                            <option value="Programming | Tip">Programming | Tip</option>
                            <option value="Pulser issue">Pulser issue</option>
                            <option value="Service delivery">Service delivery</option>
                            <option value="Surface issue">Surface issue</option>
                            <option value="Survey issue">Survey issue</option>
                            <option value="UsMPR">UsMPR</option>
                            <option value="WellArchitect">WellArchitect</option>
                            <option value="Win10">Win10</option>
                            <option value="WITS">WITS</option>
                            <option value="Other">Other</option>
                        </select>
                        <div class="select-arrow">
                            <svg class="icon_dropdown_arrow" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path d="M6 9L12 15L18 9" />
                            </svg>
                        </div>
                    </div>
                </div>
                <div class="input-field">
                    <label class="form-label">Отметка</label>
                    <div class="select-wrapper">
                        <select asp-for="HighLight">
                            <option value=""></option>
                            <option value="🚩">🚩</option>
                        </select>
                        <div class="select-arrow">
                            <svg class="icon_dropdown_arrow" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path d="M6 9L12 15L18 9" />
                            </svg>
                        </div>
                    </div>
                </div>
                <div class="input-field">
                    <label class="form-label">Статус</label>
                    <div class="select-wrapper">
                        <select asp-for="Status" id="status-select">
                            <option value="Success">Success</option>
                            <option value="Process">Process</option>
                            <option value="Fail">Fail</option>
                            <option value="None">None</option>
                        </select>
                        <div class="select-arrow">
                            <svg class="icon_dropdown_arrow" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path d="M6 9L12 15L18 9" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>

            <div class="right">
                <div class="description">
                    <div class="input-field">
                        <label for="" class="form-label">Описание инцидента:</label>
                        <textarea class="form-control" id="descriptionTextarea" rows="12" asp-for="Solution">
                            @Html.Raw(bha)
                        </textarea>
                    </div>
                </div>

                <div class="add_file_container">
                    <input type="file" id="fileInput" class="file-input" multiple onchange="handleFileSelect(event)">
                    <label for="fileInput" class="file-button">
                        <svg class="icon_addfile" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path d="M20 7V6.8C20 5.11984 20 4.27976 19.673 3.63803C19.3854 3.07354 18.9265 2.6146 18.362 2.32698C17.7202 2 16.8802 2 15.2 2H8.8C7.11984 2 6.27976 2 5.63803 2.32698C5.07354 2.6146 4.6146 3.07354 4.32698 3.63803C4 4.27976 4 5.11984 4 6.8V17.2C4 18.8802 4 19.7202 4.32698 20.362C4.6146 20.9265 5.07354 21.3854 5.63803 21.673C6.27976 22 7.11984 22 8.8 22H12.5M12.5 11H8M11.5 15H8M16 7H8M18 18V12.5C18 11.6716 18.6716 11 19.5 11C20.3284 11 21 11.6716 21 12.5V18C21 19.6569 19.6569 21 18 21C16.3431 21 15 19.6569 15 18V14"></path>
                        </svg>
                    </label>
                    <div class="file-preview" id="filePreview"></div>
                    @* <div id="overlay"></div>
                    <img id="fullImage" class="full-image" onclick="closeFullImage()"> *@
                </div>
            </div>

        </div>

        <div class="button-container">
            <button type="submit" class="btn btn-primary btn-lg">
                <svg class="icon_plus" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6 15L8 17L12.5 12.5M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"></path>
                </svg>
                Добавить
            </button>
        </div>
    </form>

    <form method="post" action="/Incidents/SetIpAddressAndGetLatestVsatInfo" id="vsatForm" style="display: none">
        <div class="input-field">
            <label for="vsatInput" class="form-label">IP-адрес</label>
            <input type="number" id="vsatInputHidden" name="ipPart" class="form-control form-control-sm" min="0" />
        </div>
    </form>

    <script>
        var selectedFiles = [];

        document.addEventListener('DOMContentLoaded', function () {
            var getDataButton = document.querySelector('#getDataButton');
            var vsatInput = document.querySelector('#vsatInput');
            var vsatForm = document.querySelector('#vsatForm');
            var vsatInputHidden = document.querySelector('#vsatInputHidden');
            var descriptionTextarea = document.querySelector('#descriptionTextarea');

            // Загрузка сохраненного значения из localStorage при загрузке страницы
            var savedVsatValue = localStorage.getItem('vsatValue');
            if (savedVsatValue) {
                vsatInput.value = savedVsatValue;
            }

            if (getDataButton && vsatInput && vsatForm && vsatInputHidden) {
                // Сохранение значения в localStorage и отправка формы при нажатии кнопки
                getDataButton.addEventListener('click', function () {
                    var ipPart = vsatInput.value;
                    if (ipPart) {
                        localStorage.setItem('vsatValue', ipPart); // Сохраняем значение в localStorage
                        vsatInputHidden.value = ipPart; // Обновляем скрытое поле
                        vsatForm.submit(); // Отправляем форму для получения данных
                    } else {
                        console.error('IP-адрес не введен');
                        alert('Пожалуйста, введите IP-адрес.');
                    }
                });
            } else {
                console.error('Не удалось найти элементы кнопки или формы.');
            }

            // Установка значения в поле textarea
            var bha = "@Html.Raw(bha)"; // Преобразуем значение в строку
            if (descriptionTextarea) {
                descriptionTextarea.value = bha;
            }
        });

        // Функция для добавления файлов
        function handleFileSelection(event) {
            const files = event.target.files;
            const filePreviewDiv = document.getElementById('filePreview');

            if (!filePreviewDiv) {
                console.error('Элемент с id "filePreview" не найден.');
                return; // Прекращаем выполнение функции, если элемент не найден
            }

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                // Проверка, что файл еще не добавлен
                if (!selectedFiles.some(f => f.name === file.name && f.size === file.size && f.lastModified === file.lastModified)) {
                    selectedFiles.push(file); // Добавляем каждый выбранный файл в массив
                }
            }

            updateFilePreview(); // Обновляем отображение файлов
        }

        // Функция для обновления предпросмотра файлов
        function updateFilePreview() {
            const filePreviewDiv = document.getElementById('filePreview');

            if (!filePreviewDiv) {
                console.error('Элемент с id "filePreview" не найден.');
                return;
            }

            // Очистка предыдущего предпросмотра файлов
            filePreviewDiv.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';

                // Create SVG element for file icon
                const svgElement1 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                svgElement1.setAttribute("viewBox", "0 0 24 24");
                svgElement1.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                svgElement1.setAttribute("class", "icon_delete_item");

                // Create path element for file icon
                const pathElement1 = document.createElementNS("http://www.w3.org/2000/svg", "path");
                pathElement1.setAttribute("d", getFileIcon(file.type));

                svgElement1.appendChild(pathElement1);

                // File icon element
                const fileIcon = document.createElement('div');
                fileIcon.className = 'file-icon';
                fileIcon.title = file.name;
                fileIcon.onclick = function() {
                    openFile(URL.createObjectURL(file), file.type);
                };

                fileIcon.appendChild(svgElement1);

                // File name
                const fileName = document.createElement('div');
                fileName.className = 'file-name';
                fileName.style.wordBreak = 'break-all';

                // Ограничиваем имя файла до 20 символов и добавляем многоточие, если оно длиннее
                const maxLength = 20;
                fileName.textContent = file.name.length > maxLength ? file.name.substring(0, maxLength) + '...' : file.name;


                // Delete button
                const deleteBtn = document.createElement('button');
                deleteBtn.className = 'delete-btn';
                deleteBtn.dataset.index = index;

                deleteBtn.addEventListener('click', function () {
                    const idx = parseInt(this.dataset.index, 10);
                    selectedFiles.splice(idx, 1);  // Удаляем файл из массива
                    updateFilePreview(); // Обновляем отображение
                });

                // Create SVG element for delete icon
                const svgElement2 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                svgElement2.setAttribute("viewBox", "0 0 24 24");
                svgElement2.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                svgElement2.setAttribute("class", "icon_delete_item");

                // Create path element for delete icon
                const pathElement2 = document.createElementNS("http://www.w3.org/2000/svg", "path");
                pathElement2.setAttribute("d", "M17 7L7 17M7 7L17 17");

                svgElement2.appendChild(pathElement2);

                deleteBtn.appendChild(svgElement2);

                // Append elements to file item
                fileItem.appendChild(fileIcon);
                fileItem.appendChild(fileName);
                fileItem.appendChild(deleteBtn);

                filePreviewDiv.appendChild(fileItem);
            });
        }

        // Добавляем обработчик события для выбора файлов
        document.getElementById('fileInput').addEventListener('change', handleFileSelection);

        // Добавляем обработчик события для отправки формы
        document.getElementById('mainForm').addEventListener('submit', function (event) {
            event.preventDefault();  // Предотвращаем обычную отправку формы

            const form = this;
            const formData = new FormData();

            // Добавляем выбранные файлы
            selectedFiles.forEach(file => formData.append('UploadedFiles', file));

            // Добавляем другие поля формы
            const formElements = form.elements;
            for (let i = 0; i < formElements.length; i++) {
                const element = formElements[i];
                if (element.name && element.type !== 'file') {
                    formData.append(element.name, element.value);
                }
            }

            // Получаем токен антивируса (CSRF токен)
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                formData.append('__RequestVerificationToken', token.value);
            }

            // Отправка формы с использованием fetch
            fetch(form.action, {
                method: form.method,
                body: formData,
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/Incidents/Index';  // Перенаправление после успешной отправки
                } else {
                    return response.text().then(text => { throw new Error(text) });
                }
            })
            .catch(error => {
                console.error('Ошибка при отправке формы:', error);
                alert('Произошла ошибка при сохранении инцидента.');
            });
        });

        function deleteFile(fileName, incidentId) {
            // Код для удаления файла через AJAX
            fetch('/Incidents/DeleteFile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ fileName: fileName, incidentId: incidentId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Удаляем элемент из DOM
                    const fileElement = document.querySelector(`button[data-filename="${fileName}"][data-incidentid="${incidentId}"]`).parentElement;
                    fileElement.remove();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Ошибка при удалении файла:', error);
                alert('Произошла ошибка при удалении файла.');
            });
        }

        function getFileIcon(fileType) {
            // Return a default icon or a specific icon based on the file type
            if (fileType.includes('text/')) return "M14 2.26953V6.40007C14 6.96012 14 7.24015 14.109 7.45406C14.2049 7.64222 14.3578 7.7952 14.546 7.89108C14.7599 8.00007 15.0399 8.00007 15.6 8.00007H19.7305M14 17H8M16 13H8M20 9.98822V17.2C20 18.8802 20 19.7202 19.673 20.362C19.3854 20.9265 18.9265 21.3854 18.362 21.673C17.7202 22 16.8802 22 15.2 22H8.8C7.11984 22 6.27976 22 5.63803 21.673C5.07354 21.3854 4.6146 20.9265 4.32698 20.362C4 19.7202 4 18.8802 4 17.2V6.8C4 5.11984 4 4.27976 4.32698 3.63803C4.6146 3.07354 5.07354 2.6146 5.63803 2.32698C6.27976 2 7.11984 2 8.8 2H12.0118C12.7455 2 13.1124 2 13.4577 2.08289C13.7638 2.15638 14.0564 2.27759 14.3249 2.44208C14.6276 2.6276 14.887 2.88703 15.4059 3.40589L18.5941 6.59411C19.113 7.11297 19.3724 7.3724 19.5579 7.67515C19.7224 7.94356 19.8436 8.2362 19.9171 8.5423C20 8.88757 20 9.25445 20 9.98822Z";
            if (fileType.includes('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')) return "M14 2.26953V6.40007C14 6.96012 14 7.24015 14.109 7.45406C14.2049 7.64222 14.3578 7.7952 14.546 7.89108C14.7599 8.00007 15.0399 8.00007 15.6 8.00007H19.7305M14 17H8M16 13H8M20 9.98822V17.2C20 18.8802 20 19.7202 19.673 20.362C19.3854 20.9265 18.9265 21.3854 18.362 21.673C17.7202 22 16.8802 22 15.2 22H8.8C7.11984 22 6.27976 22 5.63803 21.673C5.07354 21.3854 4.6146 20.9265 4.32698 20.362C4 19.7202 4 18.8802 4 17.2V6.8C4 5.11984 4 4.27976 4.32698 3.63803C4.6146 3.07354 5.07354 2.6146 5.63803 2.32698C6.27976 2 7.11984 2 8.8 2H12.0118C12.7455 2 13.1124 2 13.4577 2.08289C13.7638 2.15638 14.0564 2.27759 14.3249 2.44208C14.6276 2.6276 14.887 2.88703 15.4059 3.40589L18.5941 6.59411C19.113 7.11297 19.3724 7.3724 19.5579 7.67515C19.7224 7.94356 19.8436 8.2362 19.9171 8.5423C20 8.88757 20 9.25445 20 9.98822Z";
            return "M14 2.26946V6.4C14 6.96005 14 7.24008 14.109 7.45399C14.2049 7.64215 14.3578 7.79513 14.546 7.89101C14.7599 8 15.0399 8 15.6 8H19.7305M20 9.98822V17.2C20 18.8802 20 19.7202 19.673 20.362C19.3854 20.9265 18.9265 21.3854 18.362 21.673C17.7202 22 16.8802 22 15.2 22H8.8C7.11984 22 6.27976 22 5.63803 21.673C5.07354 21.3854 4.6146 20.9265 4.32698 20.362C4 19.7202 4 18.8802 4 17.2V6.8C4 5.11984 4 4.27976 4.32698 3.63803C4.6146 3.07354 5.07354 2.6146 5.63803 2.32698C6.27976 2 7.11984 2 8.8 2H12.0118C12.7455 2 13.1124 2 13.4577 2.08289C13.7638 2.15638 14.0564 2.27759 14.3249 2.44208C14.6276 2.6276 14.887 2.88703 15.4059 3.40589L18.5941 6.59411C19.113 7.11297 19.3724 7.3724 19.5579 7.67515C19.7224 7.94356 19.8436 8.2362 19.9171 8.5423C20 8.88757 20 9.25445 20 9.98822Z";
        }

        function openFile(fileUrl, fileType) {
            // Открываем файл в новом окне
            const newWindow = window.open();
            newWindow.document.write(`<embed src="${fileUrl}" type="${fileType}" width="100%" height="100%" />`);
        }
            
        const textarea = document.getElementById('exampleFormControlTextarea1');
        if (textarea) {
            textarea.addEventListener('paste', handlePaste);
        }

        // Автоматически нажимаем кнопку "Сохранить" после выбора файла
        function handleFileSelect(event) {
            console.log('handleFileSelect called');
            console.log('Selected file:', event.target.files[0]);

            // Используем setTimeout для отсрочки нажатия кнопки "Сохранить"
            setTimeout(function () {
                var submitButton = document.querySelector('button[type="submit"]');
                if (submitButton) {
                    console.log('Submitting form...');
                    submitButton.click();
                } else {
                    console.error('Submit button not found');
                }
            }, 100); // Задержка в 100 мс для уверенности, что файл выбран
        }

    </script>
</body>
</html>
